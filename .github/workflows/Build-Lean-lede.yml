name: Build-Lean-lede
on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/Build-Lean-lede.yml'
      - 'x86_64.config'
      - 'diy.sh'
      - 'zzz-default-settings'
  schedule:
        - cron: 0 11/24 * * */1
env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  x86:
    runs-on: ubuntu-latest
    steps:    
    - name: Prepare environment.
      env:
          DEBIAN_FRONTEND: noninteractive
      run: |
        #sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        docker rmi `docker images -q`
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo df -h
        curl -fsSL https://github.com/goofysun/Goofy-LedeCI/blob/master/.bashrc >> ~/.bashrc
        sudo timedatectl set-timezone "$TZ"
    - name: Checkout
      uses: actions/checkout@master    
    - name: Clone source and install
      run: |
        chmod +x make.sh
        ./make.sh
        
    - name: Get current date
      if: always()
      id: date
      run: |
        echo "date=$(date +'%m/%d_%Y_%H/%M')" >> $GITHUB_ENV
        echo "date2=$(date +'%m/%d %Y')" >> $GITHUB_ENV
        echo "date3=$(date +'%m.%d')" >> $GITHUB_ENV
         
    - name: Upload entire bin directory
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: ${{ env.date3 }}_LEDE-x86_64-bin-dictionary
        path: lede/bin
        
    - name: Setup Upload dictionary
      if: always()
      run: |
        cd lede/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$(pwd)" >> $GITHUB_ENV
        
    - name: Only Upload firmware (Without packages)
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: ${{ env.date3 }}_x86_64
        path: ${{ env.FIRMWARE }}
    
    - name: Upload firmware to cowtransfer
      if: always()
      continue-on-error: true
      run: |
        curl -fsSL git.io/file-transfer | sh
        cowurl=$(./transfer cow --block 2621440 -s --no-progress ${FIRMWARE})
        cowurl=$(echo $cowurl | grep -o -E "https[^ ]*")
        echo "COWURL=$cowurl" >> $GITHUB_ENV
        echo "奶牛Download Link: $cowurl  🚀"
        weturl=$(./transfer wet -s -p 16 --no-progress ${FIRMWARE})
        weturl=$(echo $weturl | grep -o -E "https[^ ]*")
        echo "WETURL=$weturl" >> $GITHUB_ENV
        echo "wet Download Link: $weturl  🚀"
    
    - name: Create release
      id: create_release
      uses: actions/create-release@master
      continue-on-error: true
      if: env.REPO_TOKEN 
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        tag_name: ${{ env.date }}_x86_64_全量版
        release_name: ${{ env.date2 }} _x86_64_全量版
        body: |
            墙内加速下载:全量版本几乎包含所有常用插件，懒人专用，所有插件未设置自动启动
            奶牛快传: ${{ env.COWURL }} 🐕
            WeTransfer: ${{ env.WETURL }} 🚀
            请分配不低于500M 的内存和存储空间 
        draft: false
        prerelease: false     

    - name: Upload firmware for release
      uses: csexton/release-asset-action@master
      continue-on-error: true
      if: env.REPO_TOKEN
      with:
        pattern: "${{ env.FIRMWARE }}/*"
        github-token: ${{ secrets.REPO_TOKEN }}
        release-url: ${{ steps.create_release.outputs.upload_url }}
    
    
#     - name: WeChat notification
#       run: |
#         [ ${{ env.status }} == 'success' ] && curl https://sc.ftqq.com/SCU31388T7e7d32f3d89ef0033572ec592da40a6f5b84e595389ee.send?text=🎉Lede_${{ env.date3 }}_x86_64编译完成😋 || curl https://sc.ftqq.com/SCU31388T7e7d32f3d89ef0033572ec592da40a6f5b84e595389ee.send?text=❌Lede_${{ env.date3 }}__x86_64编译失败😂
